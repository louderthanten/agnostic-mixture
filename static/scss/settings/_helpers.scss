// HELPERS

//Hide for both screenreaders and browsers: http://css-discuss.incutio.com/wiki/Screenreader_Visibility
.ir {
    background-repeat: no-repeat;
    direction: ltr;
    display: block;
    text-align: left;
    text-indent: -999em;
    overflow: hidden;

    br {
        display: none;
    }
}

.hidden {
    display: none;
    visibility: hidden;
}

// Hide only visually, but have it available for screenreaders: by Jon Neal. http://www.webaim.org/techniques/css/invisiblecontent/  &  j.mp/visuallyhidden
.visuallyhidden {
    border: 0;
    clip: rect(0 0 0 0);
    height: 1px;
    margin: -1px;
    overflow: hidden;
    padding: 0;
    position: absolute;
    width: 1px;

    /* Extends the .visuallyhidden class to allow the element to be focusable when navigated to via the keyboard: drupal.org/node/897638 */
    &.focusable {
        &:active,
        &:focus {
            clip: auto;
            height: auto;
            margin: 0;
            overflow: visible;
            position: static;
            width: auto;
        }
    }
}

// Hide visually and from screenreaders, but maintain layout
.invisible {
    visibility: hidden;
}
.right{
    float:right;
}
.left{
    float:left;
}
.clear { clear:both; }



// Helpful placeholder selectors give us easy access to some nice helpers without fill our code with classes.

// Contain floats: nicolasgallagher.com/micro-clearfix-hack/
%group {
    zoom:1;

    &:before,
    &:after{
        content:" ";
        display:table;
    }

    &:after{
        clear:both;
    }
}

// Effortlessly vertically align objects
%vertical-align {
  position: relative;
  top: 50%;
  transform: translateY(-50%);
}

// Text manipulation
.text--left   {
    text-align: left;
}
.text--right  {
    text-align: right;
}
.text--center {
    text-align: center;
}
.hide  {
    display: none;
}